#!/bin/sh
# update_linux -- shell script to update the linux image on Blackfins
#  running a 3.10 (buildroot) linux kernel
#
# Copyright (c) 2017 LCOGT, Inc.
#

if [ \( "$1" = "--help" \) -o \( $# -ne 1 \) ]; then
	echo "usage: update_linux <image_file>"
	echo
	echo "Example: update_linux uImage-1.0.0"
	echo
	exit 1
fi

# Verify we have the correct starting configuration

kernel=`uname -r | awk -F"[ .]+" '{print $1"."$2}'`
if [ "$kernel" != "3.10" ]; then
	echo "Unsupported kernel version $kernel detected."
	echo "This script only supports upgrading 3.10 kernels."
	exit 1
fi
mtd_size=`cat /proc/mtd | awk '/mtd0:/ {print $2}'`
if [ "$mtd_size" != "00040000" ]; then
	echo "mtd0 size mismatch: expected 00040000, found $mtd_size"
	exit 1
fi
mtd_size=`cat /proc/mtd | awk '/mtd1:/ {print $2}'`
if [ "$mtd_size" != "00100000" ]; then
	echo "mtd1 size mismatch: expected 00100000, found $mtd_size"
	exit 1
fi
mtd_size=`cat /proc/mtd | awk '/mtd2:/ {print $2}'`
if [ "$mtd_size" != "00100000" ]; then
	echo "mtd2 size mismatch: expected 00100000, found $mtd_size"
	exit 1
fi

cd /tmp

# Download the target linux image

echo "Downloading image file $1..."
tftp -g -l "$1.md5" -r "blackfin/$1.md5" repos
if [ $? -ne 0 ]; then
	echo "Error downloading $1.md5"
	exit 1
fi
tftp -g -l "$1" -r "blackfin/$1" repos
if [ $? -ne 0 ]; then
	echo "Error downloading $1"
	exit 1
fi
echo "Download complete."
md5sum -c "$1.md5"
if [ $? -ne 0 ]; then
	echo "Bad checksum on $1"
	exit 1
fi
grep -q bf537-0.3 "$1"
if [ $? -ne 0 ]; then
	echo "$1 is not the correct image file for this operation."
	exit 1
fi

# Offer opportunity to back out

echo
echo
echo "*********************************************************************************"
echo "    DANGER!  DANGER!  WARNING!  WARNING!  DANGER!  DANGER!  WARNING!  WARNING!"
echo "*********************************************************************************"
echo
echo "You have reached the point of no return.  Proceed at your own risk.  If anything"
echo "goes wrong from this point forward, you may have to travel half-way around the"
echo "planet to fix it.  Good luck!"
echo
echo
echo "Type 'GO' and press <Enter> to begin flashing or just press <Enter> to quit."
echo
read response

if [ "$response" != "GO" ]; then
	echo "Flashing aborted!"
	exit 1
fi

# Execute the downgrade

echo
echo "Here goes nothing..."
echo

echo "Stopping services..."
killall boa crond lcocron post
sleep 2
echo "Services stopped."

echo "Flashing image file..."
flash_erase -u /dev/mtd1 0 0
echo "Writing bytes 0x000000 - 0x0FFFFF"
dd if="$1" of=/dev/mtd1 bs=128k count=8
flash_lock /dev/mtd1

flash_erase -u /dev/mtd2 0 0
echo "Writing bytes 0x100000 - 0x1FFFFF"
dd if="$1" of=/dev/mtd2 bs=128k skip=8 count=8 conv=sync
flash_lock /dev/mtd2

echo "Image file flashed."
sleep 1

echo "Rebooting in five seconds..."
sleep 5
reboot
